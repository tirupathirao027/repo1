name: testCopyfile

#on: [push]

on:
  workflow_dispatch:
    inputs:
      body:
        required: true
        type: string        
  
  
jobs:
  GetSnowInputs:
    runs-on:  [windows-latest]
    outputs:
      REQUESTER_INFORMATION: ${{ steps.get_snow_inputs.outputs.requester_information }}
      U_REQUESTER: ${{ steps.get_snow_inputs.outputs.u_requester }}
      USERID: ${{ steps.get_snow_inputs.outputs.userid }}
      REQUESTER_LOCATION: ${{ steps.get_snow_inputs.outputs.requester_location }}
      PHONE: ${{ steps.get_snow_inputs.outputs.phone }}
      SPECIAL_MSG: ${{ steps.get_snow_inputs.outputs.SPECIAL_MSG }}
      OPENED_BY: ${{ steps.get_snow_inputs.outputs.opened_by }}
      EMAIL: ${{ steps.get_snow_inputs.outputs.email }}
      OFFICE: ${{ steps.get_snow_inputs.outputs.office }}
      REQUESTER_ASSET_INFO: ${{ steps.get_snow_inputs.outputs.requester_asset_info }}
      IACPIPELINEID: ${{ steps.get_snow_inputs.outputs.iacpipelineid }}
      IACPROJECT: ${{ steps.get_snow_inputs.outputs.iacproject }}
      IACBRANCHNAME: ${{ steps.get_snow_inputs.outputs.iacbranchname }}
      IACPIPELINETIMEOUT: ${{ steps.get_snow_inputs.outputs.iacpipelinetimeout }}
      IACTIMEOUTAG: ${{ steps.get_snow_inputs.outputs.iactimeoutag }}
      REPO_ADMINS: ${{ steps.get_snow_inputs.outputs.repo_admins }}
      REPO_WRITERS: ${{ steps.get_snow_inputs.outputs.repo_writers }}
      REPO_READERS: ${{ steps.get_snow_inputs.outputs.repo_readers }}
      TENANT: ${{ steps.get_snow_inputs.outputs.tenant }}
      CONTRIBUTORUPN: ${{ steps.get_snow_inputs.outputs.contributorupn }}
      TEAM_NAME: ${{ steps.get_snow_inputs.outputs.team_name }}
      CONTEXT_CONTAINER: ${{ steps.get_snow_inputs.outputs.context_container }}
      SOLUTION_NAME: ${{ steps.get_snow_inputs.outputs.solution_name }}
      CONTEXT: ${{ steps.get_snow_inputs.outputs.context }}
      DMZCHECKBOX: ${{ steps.get_snow_inputs.outputs.DMZcheckbox }}
      COST_CENTER: ${{ steps.get_snow_inputs.outputs.cost_center }}
      FINANCIAL_OWNER: ${{ steps.get_snow_inputs.outputs.financial_owner }}
      BILLING_CONTACT: ${{ steps.get_snow_inputs.outputs.billing_contact }}
      DEPARTMENT: ${{ steps.get_snow_inputs.outputs.department }}
      APM_ID: ${{ steps.get_snow_inputs.outputs.apm_id }}
      MARKET: ${{ steps.get_snow_inputs.outputs.market }}
      FUNCTIONAL_OWNER: ${{ steps.get_snow_inputs.outputs.functional_owner }}
      TECHNICAL_OWNER: ${{ steps.get_snow_inputs.outputs.technical_owner }}
      SHARED_COST: ${{ steps.get_snow_inputs.outputs.shared_cost }}
      DATA_CLASSIFICATION: ${{ steps.get_snow_inputs.outputs.data_classification }}
      PII: ${{ steps.get_snow_inputs.outputs.pii }}
      NETWORK: ${{ steps.get_snow_inputs.outputs.network }}
      ENV_CONTAINER: ${{ steps.get_snow_inputs.outputs.env_container }}
      DEVELOPMENT: ${{ steps.get_snow_inputs.outputs.development }}
      TEST: ${{ steps.get_snow_inputs.outputs.test }}
      PREPRODUCTION: ${{ steps.get_snow_inputs.outputs.preproduction }}
      PRODUCTION: ${{ steps.get_snow_inputs.outputs.production }}
      INNOVATION: ${{ steps.get_snow_inputs.outputs.innovation }}
      INTEGRATION: ${{ steps.get_snow_inputs.outputs.integration }}
      RUNTIME: ${{ steps.get_snow_inputs.outputs.runtime }}
      SANDBOX: ${{ steps.get_snow_inputs.outputs.sandbox }}
      STAGING: ${{ steps.get_snow_inputs.outputs.staging }}
      EXPLORATION: ${{ steps.get_snow_inputs.outputs.exploration }}
      NONPRODUCTION: ${{ steps.get_snow_inputs.outputs.nonproduction }}
      ENV_CONTAINER_END: ${{ steps.get_snow_inputs.outputs.env_container_end }}
      ACKNOW_CONTAINER: ${{ steps.get_snow_inputs.outputs.acknow_container }}
      SPP_AZURE_REGION: ${{ steps.get_snow_inputs.outputs.spp_azure_region }}
      CONFIRMATION_GIP: ${{ steps.get_snow_inputs.outputs.confirmation_gip }}
      SUB_RG_NAME: ${{ steps.get_snow_inputs.outputs.sub_rg_name }}
      RG: ${{ steps.get_snow_inputs.outputs.rg }}
      REPO_NAME: ${{ steps.get_snow_inputs.outputs.repo_name }}
      TEMPLATES: ${{ steps.get_snow_inputs.outputs.templates }}
      REGION: ${{ steps.get_snow_inputs.outputs.region }}
      DXC_MACRO_TEMPLATE: ${{ steps.get_snow_inputs.outputs.dxc_macro_template }}
      NET_VERSIONS: ${{ steps.get_snow_inputs.outputs.net_versions }}
      PHP_VERSIONS: ${{ steps.get_snow_inputs.outputs.php_versions }}
      SKU_TIER: ${{ steps.get_snow_inputs.outputs.sku_tier }}
      VCORE: ${{ steps.get_snow_inputs.outputs.Vcore }}
      STORAGE_MAX_SIZE_IN_GB: ${{ steps.get_snow_inputs.outputs.storage_max_size_in_gb }} 
      TICKET: ${{ steps.get_snow_inputs.outputs.ticket }}
    steps:
      - name: getting snow inputs
        id: get_snow_inputs
        run: |
          $json="$(${{inputs.body}}| ConvertTo-Json -Compress)"
          $req=$json|ConvertFrom-Json
          $requester_information=$req.requester_information
          $u_requester=$req.u_requester
          $userid=$req.userid
          $requester_location=$req.requester_location
          $phone=$req.phone
          $SPECIAL_MSG=$req.SPECIAL_MSG_no_manager_exception_request_approver
          $opened_by=$req.opened_by
          $email=$req.email
          $office=$req.office
          $requester_asset_info=$req.requester_asset_info
          $iacpipelineid=$req.iacpipelineid
          $iacproject=$req.iacproject
          $iacbranchname=$req.iacbranchname
          $iacpipelinetimeout=$req.iacpipelinetimeout
          $iactimeoutag=$req.iactimeoutag
          $repo_admins=$req.repo_admins
          $repo_writers=$req.repo_writers
          $repo_readers=$req.repo_readers
          $tenant=$req.tenant
          $contributorupn=$req.contributorupn
          $team_name=$req.team_name
          $context_container=$req.name_context_container_start
          $solution_name=$req.solution_name
          $context=$req.context
          $DMZcheckbox=$req.DMZcheckbox
          $cost_center=$req.cost_center
          $financial_owner=$req.financial_owner
          $billing_contact=$req.billing_contact
          $department=$req.department
          $apm_id=$req.apm_id
          $market=$req.market
          $functional_owner=$req.functional_owner
          $technical_owner=$req.technical_owner
          $shared_cost=$req.shared_cost
          $data_classification=$req.data_classification
          $pii=$req.pii
          $network=$req.network
          $env_container=$req.environments_container_start
          $development=$req.development
          $test=$req.test
          $preproduction=$req.preproduction
          $production=$req.production
          $innovation=$req.innovation
          $integration=$req.integration
          $runtime=$req.runtime
          $sandbox=$req.sandbox
          $staging=$req.staging
          $exploration=$req.exploration
          $nonproduction=$req.nonproduction
          $env_container_end=$req.environments_container_end
          $acknow_container=$req.acknowledgement_container_start
          $spp_azure_region=$req.spp_azure_region
          $confirmation_gip=$req.confirmation_gip_azure_document
          $sub_rg_name=$req.view_subscription_resource_group_name
          $rg=$req.resource_group_name
          $repo_name=$req.repo_name
          $templates=$req.templates
          $region=$req.region
          $dxc_macro_template=$req.dxc_macro_template_16000
          $net_versions=$req.net_versions
          $php_versions=$req.php_versions
          $sku_tier=$req.sku_tier
          $Vcore=$req.total_number_of_vcores_for_elastic_pool
          $storage_max_size_in_gb=$req.storage_max_size_in_gb
          $ticket=$req.ticket
          echo requester_information=$requester_information >> $env:GITHUB_OUTPUT
          echo u_requester=$u_requester >> $env:GITHUB_OUTPUT
          echo userid=$userid >> $env:GITHUB_OUTPUT
          echo requester_location=$requester_location >> $env:GITHUB_OUTPUT
          echo phone=$phone >> $env:GITHUB_OUTPUT
          echo SPECIAL_MSG=$SPECIAL_MSG >> $env:GITHUB_OUTPUT
          echo opened_by=$opened_by >> $env:GITHUB_OUTPUT
          echo email=$email >> $env:GITHUB_OUTPUT
          echo office=$office >> $env:GITHUB_OUTPUT
          echo requester_asset_info=$requester_asset_info >> $env:GITHUB_OUTPUT
          echo iacpipelineid=$iacpipelineid >> $env:GITHUB_OUTPUT
          echo iacproject=$iacproject >> $env:GITHUB_OUTPUT
          echo iacbranchname=$iacbranchname >> $env:GITHUB_OUTPUT
          echo iacpipelinetimeout=$iacpipelinetimeout >> $env:GITHUB_OUTPUT
          echo iactimeoutag=$iactimeoutag >> $env:GITHUB_OUTPUT
          echo repo_admins=$repo_admins >> $env:GITHUB_OUTPUT
          echo repo_writers=$repo_writers >> $env:GITHUB_OUTPUT
          echo repo_readers=$repo_readers >> $env:GITHUB_OUTPUT
          echo tenant=$tenant >> $env:GITHUB_OUTPUT
          echo contributorupn=$contributorupn >> $env:GITHUB_OUTPUT
          echo team_name=$team_name >> $env:GITHUB_OUTPUT
          echo context_container=$context_container >> $env:GITHUB_OUTPUT
          echo solution_name=$solution_name >> $env:GITHUB_OUTPUT
          echo context=$context >> $env:GITHUB_OUTPUT
          echo DMZcheckbox=$DMZcheckbox >> $env:GITHUB_OUTPUT
          echo cost_center=$cost_center >> $env:GITHUB_OUTPUT
          echo financial_owner=$financial_owner >> $env:GITHUB_OUTPUT
          echo billing_contact=$billing_contact >> $env:GITHUB_OUTPUT
          echo department=$department >> $env:GITHUB_OUTPUT
          echo apm_id=$apm_id >> $env:GITHUB_OUTPUT
          echo market=$market >> $env:GITHUB_OUTPUT
          echo functional_owner=$functional_owner >> $env:GITHUB_OUTPUT
          echo technical_owner=$technical_owner >> $env:GITHUB_OUTPUT
          echo shared_cost=$shared_cost >> $env:GITHUB_OUTPUT
          echo data_classification=$data_classification >> $env:GITHUB_OUTPUT
          echo pii=$pii >> $env:GITHUB_OUTPUT
          echo network=$network >> $env:GITHUB_OUTPUT
          echo env_container=$env_container >> $env:GITHUB_OUTPUT
          echo development=$development >> $env:GITHUB_OUTPUT
          echo test=$test >> $env:GITHUB_OUTPUT
          echo preproduction=$preproduction >> $env:GITHUB_OUTPUT
          echo production=$production >> $env:GITHUB_OUTPUT
          echo innovation=$innovation >> $env:GITHUB_OUTPUT
          echo integration=$integration >> $env:GITHUB_OUTPUT
          echo runtime=$runtime >> $env:GITHUB_OUTPUT
          echo sandbox=$sandbox >> $env:GITHUB_OUTPUT
          echo staging=$staging >> $env:GITHUB_OUTPUT
          echo exploration=$exploration >> $env:GITHUB_OUTPUT
          echo nonproduction=$nonproduction >> $env:GITHUB_OUTPUT
          echo env_container_end=$env_container_end >> $env:GITHUB_OUTPUT
          echo acknow_container=$acknow_container >> $env:GITHUB_OUTPUT
          echo spp_azure_region=$spp_azure_region >> $env:GITHUB_OUTPUT
          echo confirmation_gip=$confirmation_gip >> $env:GITHUB_OUTPUT
          echo sub_rg_name=$sub_rg_name >> $env:GITHUB_OUTPUT
          echo rg=$rg >> $env:GITHUB_OUTPUT
          echo repo_name=$repo_name >> $env:GITHUB_OUTPUT
          echo templates=$templates >> $env:GITHUB_OUTPUT
          echo region=$region >> $env:GITHUB_OUTPUT
          echo dxc_macro_template=$dxc_macro_template >> $env:GITHUB_OUTPUT
          echo net_versions=$net_versions >> $env:GITHUB_OUTPUT
          echo php_versions=$php_versions >> $env:GITHUB_OUTPUT
          echo sku_tier=$sku_tier >> $env:GITHUB_OUTPUT
          echo Vcore=$Vcore >> $env:GITHUB_OUTPUT
          echo storage_max_size_in_gb=$storage_max_size_in_gb >> $env:GITHUB_OUTPUT
          echo ticket=$ticket >> $env:GITHUB_OUTPUT
  PrintValues:
    runs-on: [windows-latest]
    needs: GetSnowInputs
    steps:
      - name: print outputs
        run: |
          write-output "${{ needs.GetSnowInputs.outputs.REQUESTER_INFORMATION }}"
          write-output "${{ needs.GetSnowInputs.outputs.U_REQUESTER }}"
          write-output "${{ needs.GetSnowInputs.outputs.USERID }}"
          write-output "${{ needs.GetSnowInputs.outputs.REQUESTER_LOCATION }}"
          write-output "${{ needs.GetSnowInputs.outputs.PHONE }}"
          write-output "${{ needs.GetSnowInputs.outputs.SPECIAL_MSG }}"
          write-output "${{ needs.GetSnowInputs.outputs.OPENED_BY }}"
          write-output "${{ needs.GetSnowInputs.outputs.EMAIL }}"
          write-output "${{ needs.GetSnowInputs.outputs.OFFICE }}"
          write-output "${{ needs.GetSnowInputs.outputs.REQUESTER_ASSET_INFO }}"
          write-output "${{ needs.GetSnowInputs.outputs.IACPIPELINEID }}"
          write-output "${{ needs.GetSnowInputs.outputs.IACPROJECT }}"
          write-output "${{ needs.GetSnowInputs.outputs.IACBRANCHNAME }}"
          write-output "${{ needs.GetSnowInputs.outputs.IACPIPELINETIMEOUT }}"
          write-output "${{ needs.GetSnowInputs.outputs.IACTIMEOUTAG }}"
          write-output "${{ needs.GetSnowInputs.outputs.REPO_ADMINS }}"
          write-output "${{ needs.GetSnowInputs.outputs.REPO_WRITERS }}"
          write-output "${{ needs.GetSnowInputs.outputs.REPO_READERS }}"
          write-output "${{ needs.GetSnowInputs.outputs.TENANT }}"
          write-output "${{ needs.GetSnowInputs.outputs.CONTRIBUTORUPN }}"
          write-output "${{ needs.GetSnowInputs.outputs.TEAM_NAME }}"
          write-output "${{ needs.GetSnowInputs.outputs.CONTEXT_CONTAINER }}"
          write-output "${{ needs.GetSnowInputs.outputs.SOLUTION_NAME }}"
          write-output "${{ needs.GetSnowInputs.outputs.CONTEXT }}"
          write-output "${{ needs.GetSnowInputs.outputs.DMZCHECKBOX }}"
          write-output "${{ needs.GetSnowInputs.outputs.COST_CENTER }}"
          write-output "${{ needs.GetSnowInputs.outputs.FINANCIAL_OWNER }}"
          write-output "${{ needs.GetSnowInputs.outputs.BILLING_CONTACT }}"
          write-output "${{ needs.GetSnowInputs.outputs.DEPARTMENT }}"
          write-output "${{ needs.GetSnowInputs.outputs.APM_ID }}"
          write-output "${{ needs.GetSnowInputs.outputs.MARKET }}"
          write-output "${{ needs.GetSnowInputs.outputs.FUNCTIONAL_OWNER }}"
          write-output "${{ needs.GetSnowInputs.outputs.TECHNICAL_OWNER }}"
          write-output "${{ needs.GetSnowInputs.outputs.SHARED_COST }}"
          write-output "${{ needs.GetSnowInputs.outputs.DATA_CLASSIFICATION }}"
          write-output "${{ needs.GetSnowInputs.outputs.PII }}"
          write-output "${{ needs.GetSnowInputs.outputs.NETWORK }}"
          write-output "${{ needs.GetSnowInputs.outputs.ENV_CONTAINER }}"
          write-output "${{ needs.GetSnowInputs.outputs.DEVELOPMENT }}"
          write-output "${{ needs.GetSnowInputs.outputs.TEST }}"
          write-output "${{ needs.GetSnowInputs.outputs.PREPRODUCTION }}"
          write-output "${{ needs.GetSnowInputs.outputs.PRODUCTION }}"
          write-output "${{ needs.GetSnowInputs.outputs.INNOVATION }}"
          write-output "${{ needs.GetSnowInputs.outputs.INTEGRATION }}"
          write-output "${{ needs.GetSnowInputs.outputs.RUNTIME }}"
          write-output "${{ needs.GetSnowInputs.outputs.SANDBOX }}"
          write-output "${{ needs.GetSnowInputs.outputs.STAGING }}"
          write-output "${{ needs.GetSnowInputs.outputs.EXPLORATION }}"
          write-output "${{ needs.GetSnowInputs.outputs.NONPRODUCTION }}"
          write-output "${{ needs.GetSnowInputs.outputs.ENV_CONTAINER_END }}"
          write-output "${{ needs.GetSnowInputs.outputs.ACKNOW_CONTAINER }}"
          write-output "${{ needs.GetSnowInputs.outputs.SPP_AZURE_REGION }}"
          write-output "${{ needs.GetSnowInputs.outputs.CONFIRMATION_GIP }}"
          write-output "${{ needs.GetSnowInputs.outputs.SUB_RG_NAME }}"
          write-output "${{ needs.GetSnowInputs.outputs.RG }}"
          write-output "${{ needs.GetSnowInputs.outputs.REPO_NAME }}"
          write-output "${{ needs.GetSnowInputs.outputs.TEMPLATES }}"
          write-output "${{ needs.GetSnowInputs.outputs.REGION }}"
          write-output "${{ needs.GetSnowInputs.outputs.DXC_MACRO_TEMPLATE }}"
          write-output "${{ needs.GetSnowInputs.outputs.NET_VERSIONS }}"
          write-output "${{ needs.GetSnowInputs.outputs.PHP_VERSIONS }}"
          write-output "${{ needs.GetSnowInputs.outputs.SKU_TIER }}"
          write-output "${{ needs.GetSnowInputs.outputs.VCORE }}"
          write-output "${{ needs.GetSnowInputs.outputs.STORAGE_MAX_SIZE_IN_GB }}"
          write-output "${{ needs.GetSnowInputs.outputs.TICKET }}"
  PrintValues1:
    runs-on: [windows-latest]
    needs: PrintValues
    steps:
      - name: print outputs
        run: |
          write-output "${{ needs.GetSnowInputs.outputs.TICKET }}"
        
  PrintValues2:
    runs-on: [windows-latest]
    needs: PrintValues1
    steps:
      - name: print outputs
        run: |
          write-output "${{ needs.GetSnowInputs.outputs.TICKET }}"      
